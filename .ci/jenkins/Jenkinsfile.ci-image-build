/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jenkinsci.plugins.workflow.libs.Library

@Library('jenkins-pipeline-shared-libraries')_

pipeline {
    agent {
        label 'ubuntu'
    }

    environment {
        DOCKER_CONFIG = "${WORKSPACE}/.docker"

        IMAGE_NAME = "quay.io/kie-tools/kie-tools-ci-build"
        IMAGE_TAG = "latest"
        IMAGE_NAME_TAG = "${env.IMAGE_NAME}:${env.IMAGE_TAG}"

        NODE_VERSION = "18.17.0"
        PNPM_VERSION = "8.7.0"
        GO_VERSION = "1.21.1"
    }

    options {
        timeout(time: 60, unit: 'MINUTES')
    }

    stages {
        stage('Build image') {
            steps {
                script {
                    sh 'printenv'

                    currentBuild.displayName = env.IMAGE_TAG

                    cloud.loginContainerRegistry('quay.io', 'quay-io-kie-tools-token')

                    dir('kie-tools') {
                        deleteDir()

                        checkout scm

                        sh """
                            docker build --build-arg NODE_VERSION_ARG=${env.NODE_VERSION} --build-arg PNPM_VERSION_ARG=${env.PNPM_VERSION} --build-arg GO_VERSION_ARG=${env.GO_VERSION} -t ${env.IMAGE_NAME_TAG} -f .ci/Dockerfile.kie-tools-ci-build .
                            docker tag ${env.IMAGE_NAME_TAG} ${env.IMAGE_NAME}:${GIT_COMMIT}
                            docker tag ${env.IMAGE_NAME_TAG} ${env.IMAGE_NAME}:${BRANCH_NAME}-latest
                        """

                        sh """
                            docker --config ${DOCKER_CONFIG} push ${env.IMAGE_NAME_TAG}
                            docker --config ${DOCKER_CONFIG} push ${env.IMAGE_NAME}:${GIT_COMMIT}
                            docker --config ${DOCKER_CONFIG} push ${env.IMAGE_NAME}:${BRANCH_NAME}-latest
                        """
                    }
                }
            }
            post {
                always {
                    script {
                        sh "rm -rf ${DOCKER_CONFIG}"
                        sh 'docker logout quay.io'
                    }
                }
            }
        }
        stage('Test built image') {
            agent {
                docker {
                    image env.IMAGE_NAME_TAG
                    args '-v /var/run/docker.sock:/var/run/docker.sock --group-add docker --group-add input --group-add render'
                }
            }
            steps {
                echo 'Debug basics'
                sh '''
                    locale
                    printenv
                '''

                echo 'Test tools'
                sh '''#!/bin/bash -el
                    java -version
                    mvn --version
                    node --version
                    npm --version
                    pnpm --version
                    go version
                '''.trim()

                echo 'Test docker'
                sh '''
                    docker info
                    docker run hello-world
                '''
            }
        }
    }
}